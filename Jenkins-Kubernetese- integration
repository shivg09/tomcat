https://www.youtube.com/watch?v=IluhOk86prA
https://github.com/MithunTechnologiesDevOps/spring-boot-mongo-docker
Install java

sudo apt update
sudo apt install openjdk-8-jdk 
OR openjdk-11 if any issue

add jenkins repo


Docker installation on jenkins

curl -fsSL get.docker.com | /bin/bash

sudo usermod -aG docker jenkins
sudo systemctl restart jenkins


============

Kubernetes on ubuntu 18.04
master 2core with 4gb
worker 1core with 1 gb

sudo apt install docker.io -y

below command for both node and cluster

sudo apt-get update -y
sudo apt-get install -y apt-transport-https

sudo su -

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg |apt-key add -

cat <<EOF>/etc/apt/source.list.d/kubernetes.list
deb https://apt.kubernetes.io/kubernetes-xenial main
EOF

apt-get update -y


swapoff -a
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

mobprobe br_netfilter
sysctl -p

sudo sysctl net.bridge.bridge-nf-call-iptables=1

apt install docker.io -y

usermod -aG docker ubuntu
systemctl restart docker
service enable docker.service

apt-get install -y  kubelet kubeadm kubectl kubernetes-cni

systemctl daemon-reload
systemctl start kubelet
systemctl enable kubelet.service

================COMMON FOR MASTER AND SLAVE END

Below comamnd for only master node
===========MASTER Node========
below command from root privileges
kubeadmin init

below command from normal user

#exit root user & execute as normal user
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf$HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 |tr -d '\n')"

kubectl get nodes
kubectl get pods --all-namespaces



#get the tocken from below comand

kubeadmin token create --print-join-command

=============IN master Node END==========
kubeadmin join on node

=============================
node{
     
    stage('SCM Checkout'){
        git credentialsId: 'GIT_CREDENTIALS', url:  'https://github.com/MithunTechnologiesDevOps/spring-boot-mongo-docker.git',branch: 'master'
    }
    
    stage(" Maven Clean Package"){
      def mavenHome =  tool name: "Maven-3.6.1", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "${mavenCMD} clean package"
      
    } 
    
    
    stage('Build Docker Image'){
        sh 'docker build -t dockerhandson/spring-boot-mongo .'
    }
    
    stage('Push Docker Image'){
        withCredentials([string(credentialsId: 'DOKCER_HUB_PASSWORD', variable: 'DOKCER_HUB_PASSWORD')]) {
          sh "docker login -u dockerhandson -p ${DOKCER_HUB_PASSWORD}"
        }
        sh 'docker push dockerhandson/spring-boot-mongo'
     }
     
     stage("Deploy To Kuberates Cluster"){
       kubernetesDeploy(
         configs: 'springBootMongo.yml', 
         kubeconfigId: 'KUBERNATES_CONFIG',
         enableConfigSubstitution: true
        )
     }
	 
	  /**
      stage("Deploy To Kuberates Cluster"){
        sh 'kubectl apply -f springBootMongo.yml'
      } **/
     
}
