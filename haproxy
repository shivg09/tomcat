ubuntu@loadbalancer:~$ cat /etc/haproxy/haproxy.cfg
global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

#HAproxy for web servers
#frontend web-frontend
#frontend web-http
 # bind *:80
  #maxconn 10000
  #reqadd X-Forwarded-Proto:\ http
  #default_backend web-backend
  
frontend web-frontend
  mode http
  bind *:80
  bind *:443 ssl crt /etc/ssl/certs/server.pem
  http-request redirect scheme https unless { ssl_fc }
  default_backend web-backend


backend web-backend
   #redirect scheme https if !{ ssl_fc }
   mode http
   balance roundrobin
   #option forwardfor
   # http-request set-header X-Forwarded-Port %[dst_port]
    #http-request add-header X-Forwarded-Proto https if { ssl_fc }
    #server  server1.dituniversity.edu.in 10.1.3.234:80 check
    server  server1.dituniversity.edu.in 10.1.3.234:80 check
    server  server2.dituniversity.edu.in 10.1.3.235:80 check
    server  server3.dituniversity.edu.in 10.1.3.229:80 check

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Web server configuration for load balancer

ubuntu@server1:/etc/apache2/sites-available$ cat lberp.dituniversity.edu.in.conf 
#<VirtualHost *:80>

#ServerName dit.academiaerp.com
#   ServerAlias www.dit.academiaerp.com

#   DocumentRoot /var/www/html/dit/
#   Redirect / https://dit.academiaerp.com/


#</VirtualHost>
<VirtualHost *:80>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual haching
            CacheQuickHandler off
            CacheLock on
            CacheLockPath /tmp/mod_cache-lock
            CacheLockMaxAge 5
            CacheIgnoreHeaders Set-Cookie
                                                                                                                               
    <Location />
        CacheEnable disk
        CacheHeader on
        CacheDefaultExpire 600
        CacheMaxExpire 86400
        CacheLastModifiedFactor 0.5
        </Location>

	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com
        ServerName erp.dituniversity.edu.in
        ServerAlias www.erp.dituniversity.edu.in

	DocumentRoot /var/www/html/dit/

        RewriteEngine on
#        RewriteLog logs/apache-mod_rewrite
        RewriteRule ^/rest/(.*)$ /dit/rest/$1 [L,PT]
        RewriteRule ^/oauth/(.*)$ /dit/oauth/$1 [L,PT]
       # RewriteRule ^/logout/(.*)$ /isbmu/logout [L,PT]
        RewriteRule ^/*.jsp/(.*)$ /dit/*.jsp/$1 [L,PT]
        RewriteRule ^/logout /dit/logout [L,PT]
	RewriteRule ^/resources/images/uploads/PERSON/(.*)$ /dit/resources/images/uploads/PERSON/$1 [L,PT]
        RewriteRule ^/resources/images/uploads/GALLERY_IMAGES/(.*)$ /dit/resources/images/uploads/GALLERY_IMAGES/$1 [L,PT]
#	ServerAdmin webmaster@localhost
#	DocumentRoot /var/www/html/dit/

#        AliasMatch "/oauth/(.*)$" "/uoa/oauth/$1"

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/dit.error.log
	CustomLog ${APACHE_LOG_DIR}/dit.access.log combined


	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf
        # JkMount /tomcat-demo* worker1

        # Send JSPs for context /examples to worker named worker1


        JkMount /dit/rest/* workerdit
        JkMount /dit/oauth/* workerdit
        JkMount /dit/logout workerdit
        JkMount /dit/*.jsp workerdit
	JkMount /dit/resources/images/uploads/PERSON/* workerdit
        JkMount /dit/resources/images/uploads/GALLERY_IMAGES/* workerdit

	# Other directives here
	    <Directory />
        	Options -FollowSymLinks
	        AllowOverride None
	    </Directory>

	    <Directory /var/www/html/dit>
		 Options -Indexes -FollowSymLinks -MultiViews
		 AllowOverride None
		 Order deny,allow
		 allow from all
	    </Directory>

#SSLEngine on
#      SSLCertificateFile /etc/apache2/ssl/server.crt
#      SSLCertificateKeyFile /etc/apache2/ssl/server.key
#      SSLCertificateChainFile /etc/apache2/ssl/server.csr

#RemoteIPHeader X-Forwarded-For
#RemoteIPInternalProxy 10.1.3.233
AccessFileName .htaccess



</VirtualHost>

